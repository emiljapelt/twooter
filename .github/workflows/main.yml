name: Test and Deploy

on:
  # Enable these triggers when finalized
  push:
    branches: [feature/gh-actions]
  # branches: [ main ]
  
  # pull_request:
  #   branches: [ main ]

  # Manual trigger
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./minitwit
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./minitwit
    - name: Test
      working-directory: ./minitwit/Models.Test
      run: dotnet test --no-build --verbosity normal
      
  build-publish-image:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Publish
      run: dotnet publish -c Release -o ./publish
      working-directory: ./minitwit/Api
    - name: Docker login
      run: |
        docker login https://docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
    - name: Docker build, tag and push
      run: |
        cd ./minitwit/Api
        docker build -t twooter .
        docker tag twooter docker.pkg.github.com/themagicstrings/twooter/twooter
        docker push docker.pkg.github.com/themagicstrings/twooter/twooter
        
  deploy:
    needs: build-publish-image
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        run: |
          docker login https://docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_API_KEY }}
          port: 22
          script: |
            apt update
            apt install -y docker
            
            docker pull docker.pkg.github.com/themagicstrings/twooter/twooter:latest
            
            docker stop twooter-instance || true
            docker rm twooter-instance || true
            
            docker rmi docker.pkg.github.com/themagicstrings/twooter/twooter:latest
            
            docker pull docker.pkg.github.com/themagicstrings/twooter/twooter:latest
            docker run --rm -p 443:443 -p 80:80 --name twooter-instance docker.pkg.github.com/themagicstrings/twooter/twooter:latest -e ASPNETCORE_URLS=\"http://localhost:80;https://localhost:443\""
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
